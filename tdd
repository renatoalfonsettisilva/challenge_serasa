graph TD
    A[Estratégia de Testes de API com Cypress e Trello] --> B{Foco Principal};
    B --> B1[Manutenibilidade];
    B --> B2[Reusabilidade];
    B --> B3[Cobertura de Testes de API];

    A --> C[Estrutura do Projeto];
    C --> C1[cypress/integration/api: Testes de API (.spec.js)];
    C --> C2[cypress/support: Comandos Customizados & Configurações Globais];
    C2 --> C2a[commands.js: Funções reutilizáveis (e.g., 'createBoard', 'createCard')];
    C --> C3[cypress/fixtures: Dados de Teste (e.g., test_data.json)];
    C --> C4[cypress.json: Variáveis de Ambiente e Configurações];

    A --> D[Preparação do Ambiente];
    D --> D1[Obtenção de API Key e Token Trello];
    D1 --> D1a[Garantir Segurança: Variáveis de Ambiente Cypress];
    D --> D2[Instalação e Configuração Cypress];
    D --> D3[Criação de Board/Lista Inicial (hook 'before')];

    A --> E[Implementação dos Testes];
    E --> E1[Uso de cy.request() para Interações com API];
    E1 --> E1a[Métodos HTTP: POST, GET, DELETE];
    E1 --> E1b[Parâmetros de Query: key, token, name, idList, etc.];
    E --> E2[Testes Atomicos por Ação];
    E2 --> E2a[Cadastrar Board];
    E2 --> E2b[Cadastrar Card];
    E2 --> E2c[Excluir Card];
    E2 --> E2d[Excluir Board];
    E --> E3[Asserções (expect().to.eq(), to.have.property(), etc.)];
    E3 --> E3a[Verificar Status HTTP (200, 404)];
    E3 --> E3b[Verificar Estrutura e Conteúdo da Resposta];
    E --> E4[Limpeza do Ambiente (hook 'after')];
    E4 --> E4a[Excluir Board Criado no 'before'];

    A --> F[Boas Práticas];
    F --> F1[Isolamento de Testes: Cada teste deve ser independente];
    F --> F2[Dados de Teste Dinâmicos vs. Estáticos];
    F --> F3[Logs Claros (cy.log())];
    F --> F4[Tratamento de Erros (failOnStatusCode: false para verificar 404)];
    F --> F5[Reuso de Código via 'commands.js'];
    F --> F6[Uso de Variáveis de Ambiente para Credenciais];
